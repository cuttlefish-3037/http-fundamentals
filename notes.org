#+TITLE: HTTP Fundamentals

* bronnen
  [[https://www.pluralsight.com/courses/xhttp-fund][HTTP Fundamentals door Scott Allen]]
* HTTP Resources
  Een URL heeft de volgende vorm:

  http://food.com:80/recipes/squash

  De onderdelen van een URL hebben de volgende namen:
  - url scheme: http:
  - host: food.com
  - port: 80
  - url path: /recipes/squash

  http://bing.com/search?q=jaboticaba

  - query: q=jaboticaba

  http://wikipedia.org/wiki/jabuticaba#Description

  - fragment: description

  Het fragment wordt alleen gebruikt door de browser om een heading
  binnen een pagina te lokaliseren.
** URL safe characters
   [a-zA-Z0-9]
   [$-_.+*'(),]

   Percent encoded / URL encoded wordt gebruikt om unsafe characters
   in een URL te coderen:

   - space: %20
   - !: %21
   - ": %22

   Getallen in percent encoding zijn in hexadecimale notatie!
** Mime types
   HTTP gebruikt MIME types o het soort content te duiden:
   
   | Type/Subtype | Description |
   |--------------+-------------|
   | images/gif   | GIF image   |
   | image/png    | PNG image   |
   | text/xml     | XML         |
   | text/plain   | just text   |
   | text/html    | HTML        |
   | .            |             |
   | .            |             |
   | .            |             |
   | enzovoort    |             |
   

   Mime was oorspronkelijk bedoeld voor email.
** Content negotiation
   Browser kan specificeren welke type content het wil ontvangen.
** Conclusion
   Tot nu toe hebben we behandeld:
   - resources
   - URL
   - Representation
* HTTP Messages
  HTTP messages bestaan uit http requests en http responses.
  
  Een client stuurt een request naar de server:
  client -> request -> server

  Een server stuurt een response naar de client:
  server -> response -> client

  Request en Response formaat zijn gespecificeerd in HTTP/1.1

  Request en Response zijn van verschillend type maar worden
  gecommuniceerd over een en dezelfde HTTP transaction.

  Handmatig een GET Request doen:

  #+BEGIN_SRC sh
  $ openssl s_client -connect odetocode.com:443
  
  GET /odetocode.jpg HTTP/1.1
  Host: odetocode.com
  #+END_SRC
  En druk op enter. Gebruik in Linux het reset commando's om je
  terminal te resetten.
** HTTP Request methods
   | Methods | Description                         |
   |---------+-------------------------------------|
   | GET     | Retrieve a resource                 |
   | POST    | Update a resource                   |
   | PUT     | Store a resource                    |
   | DELETE  | Remove a resource                   |
   | HEAD    | Retrieve the headers for a resource |
   |         |                                     |

   Deze lijst is niet volledig! GET en POST zijn de "primary
   workhorses" van het web!
** Safe methods
   Een GET request hoort nooit een side effect te hebben op de
   server. Een POST request kan een wijziging op de server betekenen!

   Je browser zal interveniÃ«ren bij het herladen van de pagina na een
   POST request. Herladen na een POST request kan mogelijk negatieve
   gevolgen hebben zoals twee keer inschrijven voor een nieuwsbrief.
** GET en POST scenarios
   Veel voorkomende oplossing voor het hierboven beschreven probleem
   is een POST / Redirect / GET patroon. Na een POST (bijv. signup)
   wordt de gebruiker doorgestuurd naar een nieuwe pagina met een
   redirect.

   Resultaten van een POST request gaan in de HTTP message.

   Zoeken is een safe operation en hoeft niet gedaan te worden met een
   POST request. Dit kan met een GET request. Het resultaat van een
   zoekopdracht kan via een query string worden meegegeven aan de
   server. Zoeken kan nu herhaald worden via het herladen van de
   pagina. Dit heeft geen side effects op de server.
** Request messages
   Request messages zijn altijd in ASCII. Request messages hebben het
   volgende formaat:

   #+BEGIN_EXAMPLE
   [method][url][version]
   [headers]
   [body]
   #+END_EXAMPLE
   Een host header is verplicht. [method][url][version] wordt de
   startline genoemd.

   Voorbeeld:
   #+BEGIN_EXAMPLE
   GET http://server.com/articles/741.aspx HTTP/1.1
   Host: odetocode.com
   Accept-Language: fr-FR
   Date: Fri, 9 Aug 2002 21:12:00 GMT
   #+END_EXAMPLE

   Veel voorkomende request headers:
   | Header            | Description                        |
   |-------------------+------------------------------------|
   | Referer           | The URL of the referring page      |
   | User-Agent        | Information about the browser      |
   | Accept            | Preferred media types              |
   | Accept language   | Preferred language                 |
   | Cookie            | Cookie information                 |
   | If-Modified-Since | Date of last retrieval             |
   | Date              | Creation timestamp for the message |
   |                   |                                    |
* HTTP Connections
* HTTP Architecture
* HTTP Security
